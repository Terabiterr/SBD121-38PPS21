#pragma once
#include <iostream>
#include <filesystem>
#include <iostream>
#include <sstream>
#include <iomanip>
#include <numeric>
#include <algorithm>
#include <vector>
#include <filesystem>
using namespace std;
using namespace filesystem;

class Explorer
{
public:
    Explorer(path dir);
    string ShowDirectory();
private:
    path _dir;
    /*
        принимает ссылку на
        объект directory_entry и извлекает из нее путь, а также объект file_status
        (с помощью функции status), который содержит тип файла и информацию
        о правах. Наконец, она извлекает и размер записи, если это обычный файл.
        Для каталогов и особых файлов мы просто возвращаем значение 0. Вся инфор-
        мация упаковывается в кортеж.
    */
    tuple<path, file_status, size_t> // Кортеж
        file_info(const directory_entry& entry);
    /*
        вспомогательная функция type_char. Путь может
        представлять не только каталоги и простые текстовые/бинарные файлы. Опе-
        рационные системы предоставляют множество разнообразных типов, которые
        абстрагируют что-то еще, например интерфейсы аппаратных устройств в виде
        так называемых символьных/блочных файлов. В библиотеке для работы с фай-
        ловой системой, расположенной в STL, есть множество функций-предикатов
        для них. Таким образом, можно вернуть букву 'd' для каталогов, букву 'f' для
        обычных файлов и т. д.:
    */
    static char type_char(file_status fs);
    /*
        принимает пере-
        менную perms (просто возвращающую тип класса перечисления из библиотеки
        для работы с файловой системой) и возвращает строку наподобие "rwxrwxrwx",
        которая описывает настройки прав для файла.
    */
    static string rwx(perms p); // perms - это enum
    /*
        вспомогательная функция принимает целочисленный
        размер файла и преобразует его в читабельный вид. Мы просто проигнорируем
        точку при делении чисел и округлим их до ближайшего значения кило-, мега-
        или гигабайт.
    */
    string size_string(size_t size);
};

